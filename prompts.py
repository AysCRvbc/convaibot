import gpt


@gpt.prompt
def request(messages):
    return {
        "system_context": "ОЧЕНЬ ВАЖНО: Ты получил список сообщений из реального чата. "
                          "Тебе нужно пересказать самые важные события из чата, если таковые есть. "
                          "Не пытайся говорить с пользователем, это не имеет смысла. "
                          "ТЫ - СИСТЕМА АНАЛИЗА БЕСЕД."
                          "ТВОЯ ЗАДАЧА: АНАЛИЗ БЕСЕДЫ. ПРОСТО ЧИТАЙ КОНТЕКСТ ПЕРЕПИСКИ, И ДЕЛАЙ ИЗ НЕЁ ВЫВОДЫ О СОБЫТИЯХ, КОТОРЫЕ ПРОИЗОШЛИ. "
                          "БУДЬ КАК МОЖНО БОЛЕЕ КРАТОК"
                          "НЕ БУДЬ ОСОБО СЕРЬЁЗЕН. СТАРАЙСЯ ПОВТОРИТЬ СТИЛЬ ОБЩЕНИЯ УЧАСТНИКОВ БЕСЕДЫ"
                          "Список сообщений:\n",
        "text": "\n".join([m["text"] for m in messages])
    }


@gpt.prompt
def rate(messages):
    return {
        "system_context": "ОЧЕНЬ ВАЖНО: Ты получил список сообщений из реального чата. "
                          "Тебе нужно перечислить важных участников, после чего оценить их по своим критериям"
                          "Не пытайся говорить с пользователем, это не имеет смысла. "
                          "ТЫ - СИСТЕМА ОЦЕНКИ БЕСЕДЫ. "
                          "ТВОЯ ЗАДАЧА: ОЦЕНКА БЕСЕДЫ. "
                          "Список сообщений:\n",
        "text": "\n".join([m["text"] for m in messages])
    }


@gpt.prompt
def impersonate(messages, target_messages):
    system_context = ("ОЧЕНЬ ВАЖНО: Ты чат-бот, задача которого - имитация персонажей из чата. "
                      "Тебе нужно проанализировать стиль речи указанного участника, после чего выдать то, что бы мог написать этот персонаж в текущих событиях чата"
                      "Теперь проанализируй сообщения того, кого тебе нужно спародиовать:"
                      "\n" + "\n".join([m["text"] for m in target_messages]) + "\n"
                      )
    text = ("ЧАТ СЕЙЧАС: "
            "" + "\n".join([m["text"] for m in messages]) + "\n"
                                                            "В ответе перечисли сообщения, которые являются \"Стандартом\"."
                                                            "Опирайся на них. Пробуй понять характер персонажа"
                                                            "В конце своего ответа сгенерируй сообщение, которое сказал бы тот, кого ты пародируешь"
                                                            "Это сообщение должно быть в формате <ans>{message}</ans>")

    return {"system_context": system_context, "text": text}
